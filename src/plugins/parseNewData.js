// –ü–ª–∞–≥–∏–Ω—ã
import makeMessageHead from './makeMessageHead.js'
import randomUserAgent from './parserUserAgentGenerator.js'
import randomDelay from './parserTimeDelay.js'
import startPuppeteer from './startPuppeteer.js'

/**
 * –ë—Ä–∞—É–∑–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –±–æ—Ç–∞.
 */
const browser = await startPuppeteer()

let pageCounter = 0

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ –µ–≥–æ ID.
 *
 * –î–æ—Å—Ç—É–ø–Ω—ã–µ ID:
 * - 1 ‚Äî –≠–ª—å–¥–æ—Ä–∞–¥–æ;
 * - 2 ‚Äî Ozon.
 *
 * @param {number} id ID –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞
 * @returns –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞, –µ—Å–ª–∏ id —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ '???'.
 */
const printShopNameByID = (id) => {
  const shopNames = {
    1: '–≠–ª—å–¥–æ—Ä–∞–¥–æ',
    2: 'Ozon'
  }
  if (shopNames[id]) {
    return shopNames[id]
  }
  console.log(
    `${makeMessageHead('WARNING')} ‚Äî –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π ID –º–∞–≥–∞–∑–∏–Ω–∞! (—Ñ—É–Ω–∫—Ü–∏—è '${printShopNameByID.name}')`
  )
  return '???'
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
 *
 * –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π:
 * - –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏;
 * - –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –≤—Å–µ–º —Ç–æ–≤–∞—Ä–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ( –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞);
 * - –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö;
 * - –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ï—Å–ª–∏ –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–±—Ä–∞–Ω—ã, –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä.
 *
 * @param {Object} category –î–∞–Ω–Ω—ã–µ –æ–± –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ (id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, ID –º–∞–≥–∞–∑–∏–Ω–∞)
 * @returns {Promise<void>}
 */
const parseNewData = async (category) => {
  const page = await browser.newPage()

  await page.setUserAgent(randomUserAgent())
  await page.setViewport({ width: 810, height: 900 })

  const parsedData = await Promise.all(
    category.map(async (category) => {
      console.log(
        `${makeMessageHead()} ‚Äî –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É '${category.name}' (–º–∞–≥–∞–∑–∏–Ω '${printShopNameByID(category.store_id)}')...`
      )

      try {
        await page.goto(`${category.url}`, { waitUntil: 'domcontentloaded' })
        await randomDelay(3000, 4000)

        await page.keyboard.press('End')
        // TODO: –ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç —Å–æ–±–∏—Ä–∞–ª üëÄ
        for (let i = 0; i < 2; i++) {
          try {
            await page
              .waitForSelector('#listing-container > div.Gy > button', { timeout: 5000 })
              .catch(async () => {
                console.log(
                  `${makeMessageHead('WARNING')} ‚Äî –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å UserAgent –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã '${category.name}' (${category.url})...`
                )

                await page.setUserAgent(randomUserAgent())
                await page.reload()
              })

            await page.click('#listing-container > div.Gy > button')
            await page.keyboard.press('End')
            await randomDelay(2000, 3000)
            await page.keyboard.press('End')
          } catch (error) {
            console.log(
              `${makeMessageHead('WARNING')} ‚Äî –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ '${category.name}' (${category.url}): ${error.toString()}`
            )
          }
          await page.keyboard.press('End')
        }

        console.log(`${makeMessageHead()} ‚Äî –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '${category.name}'...`)

        // –ñ–¥—ë–º –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        await page
          .waitForSelector('#listing-container > ul', { timeout: 10000 })
          .catch(async () => {
            console.log(
              `${makeMessageHead('WARNING')} ‚Äî –ö–∞—Ç–µ–≥–æ—Ä–∏—è '${category.name}' (–º–∞–≥–∞–∑–∏–Ω '${printShopNameByID(category.store_id)}') –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä–æ–≤!`
            )
            await page.reload()
          })

        const productData = await page.evaluate(async () => {
          // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
          const cards = document.querySelectorAll('#listing-container > ul > li.PD > div')

          // console.log(` ‚Äî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${cards.length}`)

          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ä—Ç–æ—á–∫—É –≤ –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
          return [...cards].map((card) => {
            let price =
              card.querySelector('.LW.TW')?.textContent.split('—Ä—É–±')[0].trim() || '–ù–µ—Ç —Ü–µ–Ω—ã'

            if (price !== '–ù–µ—Ç —Ü–µ–Ω—ã') {
              price = price.replace(' ', '')
            }
            return {
              name: card.querySelector('.ZD')?.textContent.trim() || '–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è',
              price: +price || -1,
              image: card.querySelector('.BC')?.getAttribute('src')?.trim() || '–ù–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏',
              url: card.querySelector('.ZD')?.getAttribute('href')?.trim() || '–ù–µ—Ç —Å—Å—ã–ª–∫–∏',
              store_id: '',
              category_id: '',
              // parse_date: new Date()
              parse_date: ''
            }
          })
        })

        productData.forEach((product) => {
          Object.defineProperties(product, {
            store_id: {
              value: category.store_id
            },
            category_id: {
              value: category.id
            },
            parse_date: {
              value: new Date()
            }
          })
          // console.log(product)
        })

        pageCounter++
        await page.close()

        return productData
      } catch (error) {
        pageCounter++
        await page.close()
        console.log(
          `${makeMessageHead('ERROR')} ‚Äî –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '${category.name}' (–º–∞–≥–∞–∑–∏–Ω '${printShopNameByID(category.store_id)}'):\n\t${error.toString()}`
        )
      }
    })
  )

  if (parsedData.flat().length === 0) {
    console.log(
      `${makeMessageHead('WARNING')} ‚Äî –î–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã '${category.name}' (–º–∞–≥–∞–∑–∏–Ω '${printShopNameByID(category.store_id)}') –Ω–µ –±—ã–ª–∏ —Å–æ–±—Ä–∞–Ω—ã! –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å —Ç–µ–º, —á—Ç–æ –±–æ—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`
    )
  } else {
    console.log(`${makeMessageHead()} ‚Äî –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É 'Products'...`)

    // TODO: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ç—å, –∫–æ–≥–¥–∞ —É–±–µ–¥–∏—à—å—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è üëÄ.
    // parsedData.flat().forEach(async (product) => {
    //   console.log(product)
    //   // await fetch('http://localhost:3000/api/addProduct', {
    //   //   method: 'POST',
    //   //   headers: { 'Content-Type': 'application/json' },
    //   //   body: JSON.stringify({ productData: product })
    //   // })
    // })
  }

  await randomDelay(5000, 6000)
  if (pageCounter >= 50) {
    console.log(`${makeMessageHead()} ‚Äî –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...`)
    await browser.close()
  }
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//* ‚ú® –ü–ê–†–°–ò–ù–ì –ù–û–í–´–• –î–ê–ù–ù–´–• –ü–û –û–¢–î–ï–õ–¨–ù–´–ú –ö–ê–¢–ï–ì–û–†–ò–Ø–ú –¢–û–í–ê–†–û–í ‚ú®
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

for (let id = 1; id <= 50; id++) {
  const categoriesList = await fetch(
    `http://localhost:3000/api/getAllCategories?store_id=1&categoryId=${id}`
  )

  const categories = await categoriesList.json()
  await parseNewData(categories)
  await randomDelay(15000, 25000)
}
